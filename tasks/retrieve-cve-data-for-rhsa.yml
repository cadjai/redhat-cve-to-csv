---
- name: '{{ ansible_name_module }} | Check required variables'
  fail:
    msg: "The variable rhsa_list or rhsa_file cannot be undefined or empty"
  when:
    - (not rhsa_file is defined and not rhsa_list is defined) or (not rhsa_file is defined and rhsa_list == "") or (rhsa_file == "" and not rhsa_list is defined) or (rhsa_list == "" and rhsa_file == "")

#### Only convert the rhsa_file into rhsa_list if rhsa_list is undefined or empty
- name: '{{ ansible_name_module }} | create line separated rhsa_file'
  when:
    - rhsa_file is defined
    - not rhsa_file == ''
    - not rhsa_list is defined or rhsa_list == ""
  block:
    - name: '{{ ansible_name_module }} | ensure rhsa_file is a valid file and exists '
      stat:
        path: "{{ rhsa_file }}"
      register: rhsa_file_check

    - name: '{{ ansible_name_module }} | load  rhsa_file if it exsists'
      set_fact:
        rhsa_list: "{{ rhsa_list | default([]) + [item] }}"
      loop: "{{ lookup('file', rhsa_file).splitlines() }}"
      register: rhsa_list_loaded

- name: '{{ ansible_name_module }} | set_fact | set cve_file if not defined or empty'
  set_fact:
    cve_file: "/tmp/cve-data-results.txt"
  when:
    - cve_file is undefined or cve_file == ''

- name: '{{ ansible_name_module }} | Get raw cve data'
  shell: >
    curl -s {{ cvrf_data_api_url }} \
    | jq '. | map(select(.RHSA == "{{ item | upper }}").CVEs) | .[][]'
  args:
    warn: no
  loop: "{{ rhsa_list }}"
  register: cve_raw

- name: '{{ ansible_name_module }} | file:state:absent | ensure file does not already exist '
  file:
    path: "{{ cve_file }}"
    state: absent

- name: '{{ ansible_name_module }} | file:touch | create the cve data file '
  file:
    path: "{{ cve_file }}"
    state: touch
    force: true

- name: '{{ ansible_name_module }} | shell:echo | create a line separated list of cves that can be used to generate cve data 1 of 2'
  shell: echo {{ item.stdout_lines | list }} | jq .[] >> {{ cve_file }}
  loop: "{{  cve_raw.results }}"
  when:
    - cve_raw is defined
    - cve_raw.changed is defined
    - cve_raw.changed | bool
    - cve_raw.msg is defined
    - cve_raw.msg != ''
    - " 'All items completed' in cve_raw.msg"
    - cve_raw.results is defined
    - cve_raw.results | length > 0
    - item.stdout_lines is defined
    - item.stdout_lines | length > 0
  register: cve_list_file_created

- name: '{{ ansible_name_module }} | shell:sed | remove double quotes from file  2 of 2'
  shell: >
     sed -i 's/\"//g' {{ cve_file }}
  when:
    - cve_list_file_created is defined
    - cve_list_file_created.changed is defined
    - cve_list_file_created.changed | bool
    - cve_list_file_created.results is defined
    - cve_list_file_created.results | length > 0
  register: cve_list_file_updated

